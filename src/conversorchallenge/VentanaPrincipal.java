package conversorchallenge;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Fredy Díaz
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtCantidadAConvertir = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jcbConversorMonedas = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jlbResultado = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtxtCantidadAConvertir2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbConversorTemperaturas = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jlbResultado2 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jtxtCantidadAConvertir3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcbConversorTiempo = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jlbResultado3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jtxtCantidadAConvertir4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcbConversorLongitudes = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jlbResultado4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Challenge ONE Back End - Java - Conversor de unidades");
        setBackground(new java.awt.Color(204, 255, 204));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setText("Cantidad a convertir:");

        jtxtCantidadAConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtCantidadAConvertirActionPerformed(evt);
            }
        });
        jtxtCantidadAConvertir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCantidadAConvertirKeyTyped(evt);
            }
        });

        jLabel2.setText("Resultado:");

        jcbConversorMonedas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "MXN a Dólar", "MXN a Euros", "MXN a Libras Esterlinas", "MXN a Yen Japonés", "MXN a Won sur-coreano", "Dólar a MXN", "Euros a MXN", "Libras Esterlinas a MXN", "Yen Japonés a MXN", "Won sur-coreano a MXN" }));
        jcbConversorMonedas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbConversorMonedasActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/conversor_monedas.png"))); // NOI18N

        jLabel15.setText("Moneda:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_borrar 32.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel18.setText("Elaborado por: Fredy Díaz Apolinar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel2)
                        .addComponent(jtxtCantidadAConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbConversorMonedas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jlbResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(70, 70, 70)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(79, 79, 79))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 96, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtxtCantidadAConvertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbConversorMonedas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jlbResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37)
                .addComponent(jLabel18)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Conversor de divisas", new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_monedas 32.png")), jPanel1); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel3.setText("Cantidad a convertir:");
        jLabel3.setAlignmentX(0.5F);

        jtxtCantidadAConvertir2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCantidadAConvertir2KeyTyped(evt);
            }
        });

        jLabel4.setText("Resultado:");

        jcbConversorTemperaturas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Grados Centígrados (°C) a Grados Farenheit (F)", "Grados Centígrados (°C) a Grados Kelvin (K)", "Grados Farenheit (F) a Grados Centígrados (°C)", "Grados Farenheit (F) a Grados Kelvin (K)", "Grados Kelvin (K) a Grados Centígrados (°C)", "Grados Kelvin (K) a Grados Farenheit (F)" }));
        jcbConversorTemperaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbConversorTemperaturasActionPerformed(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/conversor_temperatura.png"))); // NOI18N

        jLabel16.setText("Temperatura:");
        jLabel16.setAlignmentX(0.5F);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_borrar 32.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4)
                        .addComponent(jtxtCantidadAConvertir2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jlbResultado2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(72, 72, 72))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbConversorTemperaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtCantidadAConvertir2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbConversorTemperaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jlbResultado2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(26, 26, 26)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        jTabbedPane1.addTab("Conversor de temperaturas", new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_temperaturas 32.png")), jPanel2); // NOI18N

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));

        jLabel5.setText("Cantidad a convertir:");

        jtxtCantidadAConvertir3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCantidadAConvertir3KeyTyped(evt);
            }
        });

        jLabel6.setText("Resultado:");

        jLabel7.setText("Tiempo:");

        jcbConversorTiempo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Segundos a Minutos", "Segundos a Horas", "Minutos a Hora", "Minutos a Segundos", "Hora a Segundos", "Hora a Minutos" }));
        jcbConversorTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbConversorTiempoActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/conversor_tiempo.png"))); // NOI18N

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_borrar 32.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(jtxtCantidadAConvertir3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbConversorTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jlbResultado3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(86, 86, 86))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addContainerGap(57, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtCantidadAConvertir3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbConversorTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jlbResultado3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))))
        );

        jTabbedPane1.addTab("Conversor de tiempo", new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_tiempo 32.png")), jPanel3); // NOI18N

        jPanel4.setBackground(new java.awt.Color(204, 255, 204));

        jtxtCantidadAConvertir4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtCantidadAConvertir4KeyTyped(evt);
            }
        });

        jLabel9.setText("Cantidad a convertir:");

        jLabel10.setText("Resultado:");

        jcbConversorLongitudes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--", "Metros (m) a Centímetros (cm)", "Metros (m) a Milímetros (mm)", "Centímetros (cm) a Milímetros (mm)", "Kilómetros (km) a Metros (m)", "Metros (m) a Pie (ft)", "Metros (m) a Yarda (yd)", "Milla (mi) a Kilómetros (km)", "Milla marina a Kilómetros (km)", "Pie (ft) a Pulgadas (in)", "Pulgadas (in) a Centímetros (cm)", "Pie (ft) a Centímetros (cm)", "Yarda (yd) a Pie (ft)", "Yarda (yd) a Centímetros (cm)" }));
        jcbConversorLongitudes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbConversorLongitudesActionPerformed(evt);
            }
        });

        jLabel8.setText("Longitud:");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/conversor_distancias.png"))); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_borrar 32.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10)
                        .addComponent(jtxtCantidadAConvertir4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jlbResultado4, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addGap(64, 64, 64))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jcbConversorLongitudes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtCantidadAConvertir4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbConversorLongitudes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(31, 31, 31)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jlbResultado4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );

        jTabbedPane1.addTab("Conversor de longitudes", new javax.swing.ImageIcon(getClass().getResource("/conversorchallenge/Imagenes/icon_conversor_longitud 32.png")), jPanel4); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void ConvertirMXNaDolar() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.MXNaDolar(numero1);
            jlbResultado.setText(resultado + " Dólares");
        }
    }

    public void ConvertirMXNaEuros() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.MXNaEuros(numero1);
            jlbResultado.setText(resultado + " Euros");
        }
    }

    public void ConvertirMXNALibrasEsterlinas() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.MXNALibrasEsterlinas(numero1);
            jlbResultado.setText(resultado + " Libras Esterlinas");
        }
    }

    public void ConvertirMXNaYenJapones() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.MXNaYenJapones(numero1);
            jlbResultado.setText(resultado + " Yen Japonés");
        }
    }

    public void ConvertirMXNaWonsurcoreano() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.MXNaWonsurcoreano(numero1);
            jlbResultado.setText(resultado + " Won sur-coreano");
        }
    }

    public void ConvertirDolaraMXN() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.DolaraMXN(numero1);
            jlbResultado.setText(resultado + " MXN");
        }
    }

    public void ConvertirEuroAMXN() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.EuroAMXN(numero1);
            jlbResultado.setText(resultado + " MXN");
        }
    }

    public void ConvertirLibrasEsterlinasAMXN() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.LibrasEsterlinasAMXN(numero1);
            jlbResultado.setText(resultado + " MXN");
        }
    }

    public void ConvertirYenJaponesAMXN() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.YenJaponesAMXN(numero1);
            jlbResultado.setText(resultado + " MXN");
        }
    }

    public void ConvertirWonSurCoreanoAMXN() {
        if (jtxtCantidadAConvertir.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Divisas.WonSurCoreanoAMXN(numero1);
            jlbResultado.setText(resultado + " MXN");
        }
    }

    private void jcbConversorMonedasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbConversorMonedasActionPerformed
        // TODO add your handling code here:

        String itemSeleccionado = (String) jcbConversorMonedas.getSelectedItem();

        if ("MXN a Dólar".equals(itemSeleccionado)) {
            ConvertirMXNaDolar();
        }

        if ("MXN a Euros".equals(itemSeleccionado)) {
            ConvertirMXNaEuros();
        }

        if ("MXN a Libras Esterlinas".equals(itemSeleccionado)) {
            ConvertirMXNALibrasEsterlinas();
        }

        if ("MXN a Yen Japonés".equals(itemSeleccionado)) {
            ConvertirMXNaYenJapones();
        }

        if ("MXN a Won sur-coreano".equals(itemSeleccionado)) {
            ConvertirMXNaWonsurcoreano();
        }

        if ("Dólar a MXN".equals(itemSeleccionado)) {
            ConvertirDolaraMXN();
        }

        if ("Euros a MXN".equals(itemSeleccionado)) {
            ConvertirEuroAMXN();
        }

        if ("Libras Esterlinas a MXN".equals(itemSeleccionado)) {
            ConvertirLibrasEsterlinasAMXN();
        }

        if ("Yen Japonés a MXN".equals(itemSeleccionado)) {
            ConvertirYenJaponesAMXN();
        }

        if ("Won sur-coreano a MXN".equals(itemSeleccionado)) {
            ConvertirWonSurCoreanoAMXN();
        }

        if ("--Seleccionar--".equals(itemSeleccionado)) {
            jlbResultado.setText("");
            jtxtCantidadAConvertir.setText("");
        }
    }//GEN-LAST:event_jcbConversorMonedasActionPerformed

    public void ConvertirGradosAFarenheit() {
        if (jtxtCantidadAConvertir2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir2.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Temperatura.GradosAFarenheit(numero1);
            jlbResultado2.setText(resultado + " Grados Farenheit (F)");
        }
    }

    public void ConvertirGradosAKelvin() {
        if (jtxtCantidadAConvertir2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir2.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Temperatura.GradosCAKelvin(numero1);
            jlbResultado2.setText(resultado + " Grados Kelvin (K)");
        }
    }

    public void ConvertirFarenheitACelsius() {
        if (jtxtCantidadAConvertir2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir2.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Temperatura.FarenheitACelsius(numero1);
            jlbResultado2.setText(resultado + " Grados Centígrados (°C)");
        }
    }

    public void ConvertirFarenheitAKelvin() {
        if (jtxtCantidadAConvertir2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir2.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Temperatura.FarenheitAKelvin(numero1);
            jlbResultado2.setText(resultado + " Grados Kelvin (K)");
        }
    }

    public void ConvertirKelvinACelsius() {
        if (jtxtCantidadAConvertir2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir2.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Temperatura.KelvinACelsius(numero1);
            jlbResultado2.setText(resultado + " Grados Centígrados (°C)");
        }
    }

    public void ConvertirKelvinAFarenheit() {
        if (jtxtCantidadAConvertir2.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir2.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Temperatura.KelvinAFarenheit(numero1);
            jlbResultado2.setText(resultado + " Grados Farenheit (F)");
        }
    }

    private void jcbConversorTemperaturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbConversorTemperaturasActionPerformed
        // TODO add your handling code here:
        String itemSeleccionado = (String) jcbConversorTemperaturas.getSelectedItem();

        if ("Grados Centígrados (°C) a Grados Farenheit (F)".equals(itemSeleccionado)) {
            ConvertirGradosAFarenheit();
        }

        if ("Grados Centígrados (°C) a Grados Kelvin (K)".equals(itemSeleccionado)) {
            ConvertirGradosAKelvin();
        }

        if ("Grados Farenheit (F) a Grados Centígrados (°C)".equals(itemSeleccionado)) {
            ConvertirFarenheitACelsius();
        }

        if ("Grados Farenheit (F) a Grados Kelvin (K)".equals(itemSeleccionado)) {
            ConvertirFarenheitAKelvin();
        }

        if ("Grados Kelvin (K) a Grados Centígrados (°C)".equals(itemSeleccionado)) {
            ConvertirKelvinACelsius();
        }

        if ("Grados Kelvin (K) a Grados Farenheit (F)".equals(itemSeleccionado)) {
            ConvertirKelvinAFarenheit();
        }

        if ("--Seleccionar--".equals(itemSeleccionado)) {
            jlbResultado2.setText("");
            jtxtCantidadAConvertir2.setText("");
        }
    }//GEN-LAST:event_jcbConversorTemperaturasActionPerformed

    public void ConvertirSegAMin() {
        if (jtxtCantidadAConvertir3.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir3.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Tiempo.SegAMin(numero1);
            jlbResultado3.setText(resultado + " Minutos");
        }
    }

    public void ConvertirSegAHora() {
        if (jtxtCantidadAConvertir3.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir3.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Tiempo.SegAHora(numero1);
            jlbResultado3.setText(resultado + " Horas");
        }
    }

    public void ConvertirMinAHora() {
        if (jtxtCantidadAConvertir3.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir3.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Tiempo.MinAHora(numero1);
            jlbResultado3.setText(resultado + " Horas");
        }
    }

    public void ConvertirMinASeg() {
        if (jtxtCantidadAConvertir3.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir3.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Tiempo.MinASeg(numero1);
            jlbResultado3.setText(resultado + " Segundos");
        }
    }

    public void ConvertirHoraASeg() {
        if (jtxtCantidadAConvertir3.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir3.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Tiempo.HoraASeg(numero1);
            jlbResultado3.setText(resultado + " Segundos");
        }
    }

    public void ConvertirHoraAMin() {
        if (jtxtCantidadAConvertir3.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir3.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Tiempo.HoraAMin(numero1);
            jlbResultado3.setText(resultado + " Minutos");
        }
    }


    private void jcbConversorTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbConversorTiempoActionPerformed
        // TODO add your handling code here:
        String itemSeleccionado = (String) jcbConversorTiempo.getSelectedItem();

        if ("Segundos a Minutos".equals(itemSeleccionado)) {
            ConvertirSegAMin();
        }

        if ("Segundos a Horas".equals(itemSeleccionado)) {
            ConvertirSegAHora();
        }

        if ("Minutos a Hora".equals(itemSeleccionado)) {
            ConvertirMinAHora();
        }

        if ("Minutos a Segundos".equals(itemSeleccionado)) {
            ConvertirMinASeg();
        }

        if ("Hora a Segundos".equals(itemSeleccionado)) {
            ConvertirHoraASeg();
        }

        if ("Hora a Minutos".equals(itemSeleccionado)) {
            ConvertirHoraAMin();
        }
        
        if ("--Seleccionar--".equals(itemSeleccionado)) {
            jlbResultado3.setText("");
            jtxtCantidadAConvertir3.setText("");
        }

    }//GEN-LAST:event_jcbConversorTiempoActionPerformed

    public void ConvertirMaCm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.MaCm(numero1);
            jlbResultado4.setText(resultado + " Centímetros");
        }

    }

    public void ConvertirMaMm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.MaMm(numero1);
            jlbResultado4.setText(resultado + " Milímetros");
        }
    }

    public void ConvertirCmaMm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.CmaMm(numero1);
            jlbResultado4.setText(resultado + " Milímetros");
        }
    }

    public void ConvertirKmaM() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.KmaM(numero1);
            jlbResultado4.setText(resultado + " Metros");
        }
    }

    public void ConvertirMaPie() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.MaPie(numero1);
            jlbResultado4.setText(resultado + " Pies");
        }
    }

    public void ConvertirMaYarda() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.MaYarda(numero1);
            jlbResultado4.setText(resultado + " Yardas");
        }
    }

    public void ConvertirMillaAKm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.MillaAKm(numero1);
            jlbResultado4.setText(resultado + " Kilómetros");
        }
    }

    public void ConvertirMillMaraAKm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.MillMaraAKm(numero1);
            jlbResultado4.setText(resultado + " Kilómetros");
        }
    }

    public void ConvertirPieAPulg() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.PieAPulg(numero1);
            jlbResultado4.setText(resultado + " Pulgadas");
        }
    }

    public void ConvertirPulgACm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.PulgACm(numero1);
            jlbResultado4.setText(resultado + " Centímetros");
        }
    }

    public void ConvertirPieACm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.PieACm(numero1);
            jlbResultado4.setText(resultado + " Centímetros");
        }
    }

    public void ConvertirYardaAPie() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.YardaAPie(numero1);
            jlbResultado4.setText(resultado + " Pies");
        }
    }

    public void ConvertirYardaACm() {
        if (jtxtCantidadAConvertir4.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Escribe un valor");
        } else {
            String valor1 = jtxtCantidadAConvertir4.getText();
            double numero1 = Double.parseDouble(valor1);
            double resultado = Operaciones_Longitud.YardaACm(numero1);
            jlbResultado4.setText(resultado + " Centímetros");
        }
    }

    private void jcbConversorLongitudesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbConversorLongitudesActionPerformed
        // TODO add your handling code here:
        String itemSeleccionado = (String) jcbConversorLongitudes.getSelectedItem();

        if ("Metros (m) a Centímetros (cm)".equals(itemSeleccionado)) {
            ConvertirMaCm();
        }

        if ("Metros (m) a Milímetros (mm)".equals(itemSeleccionado)) {
            ConvertirMaMm();
        }

        if ("Centímetros (cm) a Milímetros (mm)".equals(itemSeleccionado)) {
            ConvertirCmaMm();
        }

        if ("Kilómetros (km) a Metros (m)".equals(itemSeleccionado)) {
            ConvertirKmaM();
        }

        if ("Metros (m) a Pie (ft)".equals(itemSeleccionado)) {
            ConvertirMaPie();
        }

        if ("Metros (m) a Yarda (yd)".equals(itemSeleccionado)) {
            ConvertirMaYarda();
        }

        if ("Milla (mi) a Kilómetros (km)".equals(itemSeleccionado)) {
            ConvertirMillaAKm();
        }

        if ("Milla marina a Kilómetros (km)".equals(itemSeleccionado)) {
            ConvertirMillMaraAKm();
        }

        if ("Pie (ft) a Pulgadas (in)".equals(itemSeleccionado)) {
            ConvertirPieAPulg();
        }

        if ("Pulgadas (in) a Centímetros (cm)".equals(itemSeleccionado)) {
            ConvertirPulgACm();
        }

        if ("Pie (ft) a Centímetros (cm)".equals(itemSeleccionado)) {
            ConvertirPieACm();
        }

        if ("Yarda (yd) a Pie (ft)".equals(itemSeleccionado)) {
            ConvertirYardaAPie();
        }

        if ("Yarda (yd) a Centímetros (cm)".equals(itemSeleccionado)) {
            ConvertirYardaACm();
        }
        
        if ("--Seleccionar--".equals(itemSeleccionado)) {
            jlbResultado4.setText("");
            jtxtCantidadAConvertir4.setText("");
        }
    }//GEN-LAST:event_jcbConversorLongitudesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:                
        jtxtCantidadAConvertir.setText("");
        jlbResultado.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jtxtCantidadAConvertir4.setText("");
        jlbResultado4.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jtxtCantidadAConvertir2.setText("");
        jlbResultado2.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jtxtCantidadAConvertir3.setText("");
        jlbResultado3.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jtxtCantidadAConvertirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCantidadAConvertirKeyTyped
        char caracter = evt.getKeyChar();
        if (!(((caracter >= '0') && (caracter <= '9') || (caracter == '.')
                || (caracter == KeyEvent.VK_BACK_SPACE)
                || (caracter == KeyEvent.VK_DELETE)))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCantidadAConvertirKeyTyped

    private void jtxtCantidadAConvertir2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCantidadAConvertir2KeyTyped
        char caracter = evt.getKeyChar();
        if (!(((caracter >= '0') && (caracter <= '9') || (caracter == '.')
                || (caracter == KeyEvent.VK_BACK_SPACE)
                || (caracter == KeyEvent.VK_DELETE)))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCantidadAConvertir2KeyTyped

    private void jtxtCantidadAConvertir3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCantidadAConvertir3KeyTyped
        char caracter = evt.getKeyChar();
        if (!(((caracter >= '0') && (caracter <= '9') || (caracter == '.')
                || (caracter == KeyEvent.VK_BACK_SPACE)
                || (caracter == KeyEvent.VK_DELETE)))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCantidadAConvertir3KeyTyped

    private void jtxtCantidadAConvertir4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCantidadAConvertir4KeyTyped
        char caracter = evt.getKeyChar();
        if (!(((caracter >= '0') && (caracter <= '9') || (caracter == '.')
                || (caracter == KeyEvent.VK_BACK_SPACE)
                || (caracter == KeyEvent.VK_DELETE)))) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_jtxtCantidadAConvertir4KeyTyped

    private void jtxtCantidadAConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtCantidadAConvertirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtCantidadAConvertirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    public javax.swing.JComboBox<String> jcbConversorLongitudes;
    public javax.swing.JComboBox<String> jcbConversorMonedas;
    private javax.swing.JComboBox<String> jcbConversorTemperaturas;
    public javax.swing.JComboBox<String> jcbConversorTiempo;
    public javax.swing.JLabel jlbResultado;
    private javax.swing.JLabel jlbResultado2;
    private javax.swing.JLabel jlbResultado3;
    public javax.swing.JLabel jlbResultado4;
    public javax.swing.JTextField jtxtCantidadAConvertir;
    private javax.swing.JTextField jtxtCantidadAConvertir2;
    private javax.swing.JTextField jtxtCantidadAConvertir3;
    public javax.swing.JTextField jtxtCantidadAConvertir4;
    // End of variables declaration//GEN-END:variables
}
